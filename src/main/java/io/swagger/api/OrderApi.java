/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Orders;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-22T10:30:43.681Z")

@Api(value = "order", description = "the orders API")
public interface OrderApi {

    @ApiOperation(value = "Create a order", nickname = "createOrder", notes = "Create a order", response = Orders.class, tags={ "Order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class),
        @ApiResponse(code = 405, message = "Invalid Input") })
    @RequestMapping(value = "/orders",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Orders> createOrder(@ApiParam(value = "Order object that needs to be created" ,required=true )  @Valid @RequestBody Orders body);


    @ApiOperation(value = "Delete a order", nickname = "deleteOrder", notes = "Delete a order", tags={ "Order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Order with ID 'orderId' is deleted"),
        @ApiResponse(code = 404, message = "Order not found with the Id provided"),
        @ApiResponse(code = 405, message = "Invalid ID") })
    @RequestMapping(value = "/orders/{orderId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Long> deleteOrder(@ApiParam(value = "Order ID that needs to be deleted",required=true) @PathVariable("orderId") Long orderId);


    @ApiOperation(value = "Find order by ID", nickname = "getOrder", notes = "Get a order with the ID provided", response = Orders.class, tags={ "Order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class) })
    @RequestMapping(value = "/orders/{orderId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Orders> getOrder(@ApiParam(value = "OrderIdID to return",required=true) @PathVariable("orderId") Long orderId);


    @ApiOperation(value = "Update an existing order", nickname = "updateOrder", notes = "Update a order", response = Orders.class, tags={ "Order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class),
        @ApiResponse(code = 404, message = "Order not found with the Id provided"),
        @ApiResponse(code = 405, message = "Invalid ID") })
    @RequestMapping(value = "/orders",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Orders> updateOrder(@ApiParam(value = "Order object that needs to be updated" ,required=true )  @Valid @RequestBody Orders body);

}
