/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Orders;
import io.swagger.model.OrderLine;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-22T10:30:43.681Z")

@Api(value = "orderLine", description = "the order Line API")
public interface OrderLineApi {

    @ApiOperation(value = "Create a order Line", nickname = "createOrderLine", notes = "Create a orderLine", response = Orders.class, tags={ "OrderLine", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class),
        @ApiResponse(code = 405, message = "Invalid Input") })
    @RequestMapping(value = "/orderLine",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<OrderLine> createOrderLine(@ApiParam(value = "OrderLine object that needs to be created" ,required=true )  @Valid @RequestBody OrderLine body);

    
    @ApiOperation(value = "Delete a orderLine", nickname = "deleteOrderLine", notes = "Delete a orderLine", tags={ "OrderLine", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OrderLine with ID 'orderId' is deleted"),
        @ApiResponse(code = 404, message = "OrderLine not found with the Id provided"),
        @ApiResponse(code = 405, message = "Invalid ID") })
    @RequestMapping(value = "/orderLine/{orderLineId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Long> deleteOrderLine(@ApiParam(value = "OrderLine ID that needs to be deleted",required=true) @PathVariable("orderLineId") Long orderLineId);

    
    @ApiOperation(value = "Find order Line by ID", nickname = "getOrderLine", notes = "Get a order Line with the ID provided", response = Orders.class, tags={ "OrderLine", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class) })
    @RequestMapping(value = "/orderLine/{orderLineId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<OrderLine> getOrderLine(@ApiParam(value = "OrderLineId to return",required=true) @PathVariable("orderLineId") Long orderLineId);

    
    @ApiOperation(value = "Update an existing orderLine", nickname = "updateOrderLine", notes = "Update a orderLine", response = Orders.class, tags={ "OrderLine", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful respone", response = Orders.class),
        @ApiResponse(code = 404, message = "OrderLine not found with the Id provided"),
        @ApiResponse(code = 405, message = "Invalid ID") })
    @RequestMapping(value = "/orderLine",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<OrderLine> updateOrderLine(@ApiParam(value = "OrderLine object that needs to be updated" ,required=true )  @Valid @RequestBody OrderLine body);
    
}
